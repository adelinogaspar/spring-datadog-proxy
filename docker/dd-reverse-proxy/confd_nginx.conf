lua_shared_dict api_keys 10m;

init_by_lua_block {
    local api_keys = ngx.shared.api_keys
    api_keys:set("dev_key", os.getenv("REAL_DEV_API_KEY"))
    api_keys:set("stg_key", os.getenv("REAL_STG_API_KEY"))
}

server {
    listen 8085;

    location / {
        set $real_api_key "";
        access_by_lua_block {
            local api_keys = ngx.shared.api_keys
            local fake_key = ngx.var.arg_api_key  -- Get 'api_key' from query parameters
            local real_key = api_keys:get(fake_key)

            if real_key then
                ---ngx.req.set_header("DD-API-KEY", real_key)
                -- Add the real API key to the URL query string
---                 local uri = ngx.var.uri
---                 local uri_new = ""
---                 ngx.log(ngx.NOTICE, '[URI original] ' .. ngx.var.uri)  -- Log the updated URI
---                 uri_new = uri:gsub("api_key=" .. fake_key, "api_key=" .. real_key)
---                 ngx.log(ngx.NOTICE, '[Real API Key] ' .. real_key)  -- Log the real API key
---                 ngx.log(ngx.NOTICE, '[fake] ' .. fake_key)  -- Log the real API key
---                 ngx.log(ngx.NOTICE, '[Updated URI] ' .. uri_new)  -- Log the updated URI
---                 ngx.req.set_uri(uri_new)  -- Set the updated URI
                local args = ngx.req.get_uri_args()
                if args["api_key"] then
                    args["api_key"] = real_key
                    ngx.req.set_uri_args(args)
                end
---                ngx.log(ngx.NOTICE, '[Updated URI] ' .. ngx.var.uri)  -- Log the updated URI
            else
                ngx.status = 403
                ngx.say("[nginx] Invalid API Key...")
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }

#         proxy_redirect off;
#         resolver 8.8.8.8 ipv4=on;
         proxy_http_version 1.1;
        proxy_pass http://us5.datadoghq.com;
        error_log /dev/stderr debug;  # Set this to 'debug' to see more verbose logs
    }
}
